package com.bankofapis.account.controller;

import com.bankofapis.account.model.Account;
import com.bankofapis.account.dto.UserDTO;
import com.bankofapis.account.service.AccountService;
import com.bankofapis.account.service.UserServiceClient;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.Authentication;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/accounts")
public class AccountController {

    @Autowired
    private AccountService accountService;

    @Autowired
    private UserServiceClient userServiceClient;

    @GetMapping
    public ResponseEntity<List<Account>> getAllAccounts(Authentication authentication,
                                                       @RequestParam(required = false) Integer userId) {
        String username = authentication.getName();
        UserDTO currentUser = userServiceClient.getUserByUsername(username);

        Integer currentUserId = currentUser.getUserId();

        if (userId != null && !userId.equals(currentUserId)) {
            return ResponseEntity.status(403).build();
        }

        List<Account> accounts = accountService.getAccountsByUserId(currentUserId);
        return ResponseEntity.ok(accounts);
    }

    @GetMapping("/{id}")
    public ResponseEntity<Account> getAccountById(@PathVariable Integer id, Authentication authentication) {
        Account account = accountService.getAccountById(id);

        String username = authentication.getName();
        UserDTO currentUser = userServiceClient.getUserByUsername(username);

        if (!account.getUserId().equals(currentUser.getUserId())) {
            return ResponseEntity.status(403).build();
        }

        return ResponseEntity.ok(account);
    }
}
